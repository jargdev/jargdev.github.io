<div class="relative w-full overflow-hidden flex justify-center">
  <div class="relative w-full max-w-[1920px] aspect-[20/9] overflow-hidden">
    <div class="absolute inset-0 z-0 transform will-change-transform">
      <img
        src="/hero/bg.png"
        alt="Background"
        class="w-full h-full object-cover"
      />
    </div>

    <div
      class="absolute inset-0 overflow-hidden z-10 transform will-change-transform flex justify-center items-center"
      data-speed="0.5"
    >
      <img
        src="/hero/me.png"
        alt="Foreground 1"
        class="w-full h-full object-contain"
      />

      <div class="absolute bottom-0 right-0">
        <img
          src="/hero/jargudevu.png"
          alt="Foreground 2"
          class="w-full h-full object-contain"
        />
        <button
          class="absolute bg-white text-black px-2 py-2 rounded-full hover:bg-gray-200 transition aspect-square hover:cursor-pointer"
          style="top: 35%; left: 77%;"
          id="sound-btn"
        >
          <img src="/hero/sound.svg" alt="Play Me!" class="w-5 h-5" /></button
        >
      </div>
    </div>
    <svg
      class="absolute bottom-0 w-full h-24 z-30"
      viewBox="0 0 1440 320"
      preserveAspectRatio="none"
    >
      <path
        fill="white"
        d="M0,128L48,144C96,160,192,192,288,197.3C384,203,480,181,576,160C672,139,768,117,864,117.3C960,117,1056,139,1152,138.7C1248,139,1344,117,1392,106.7L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"
      ></path>
    </svg>
  </div>
</div>

<script>
  const layers = document.querySelectorAll(
    "[data-speed]",
  ) as NodeListOf<HTMLElement>;
  window.addEventListener("scroll", () => {
    const scrollY = window.scrollY;
    layers.forEach((layer) => {
      const speed = parseFloat(layer.dataset.speed || "0");
      layer.style.transform = `translateY(${scrollY * speed}px) rotate(${scrollY * (speed * 0.02)}deg)`;
    });
  });

  const soundbtn = document.getElementById("sound-btn") as HTMLButtonElement;

  let audioContext: AudioContext | null = null;
  let audioBuffer: AudioBuffer | null = null;

  soundbtn?.addEventListener("click", async () => {
    if (!audioContext) {
      audioContext = new (window.AudioContext ||
        (window as any).webkitAudioContext)();
    }

    if (!audioBuffer) {
      const response = await fetch("/hero/jargudevu.m4a");
      const arrayBuffer = await response.arrayBuffer();
      audioBuffer = await audioContext.decodeAudioData(arrayBuffer);
    }

    const source = audioContext.createBufferSource();
    source.buffer = audioBuffer;
    source.connect(audioContext.destination);
    source.start();
  });
</script>
